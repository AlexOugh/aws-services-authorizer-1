AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Lambda Function for Custom Authorizer and API Interface for SSO Authentication.

Parameters:
  SSOHost:
    Type: String
    Description: SSO Host
  SSOBasicAuthUsername:
    Type: String
    Description: Username for SSO Auth
  SSOBasicAuthPassword:
    Type: String
    NoEcho: true
    Description: Password for SSO Auth
  SSOMasterToken:
    Type: String
    NoEcho: true
    Description: Master Refresh Token

Resources:
  EncryptionDecryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: "Encryption and Decryption key for Lambda Function Environment Variables"
      KeyPolicy:
        Id: "LambdaEncDec"
        Version: "2012-10-17"
        Statement:
          -
            Sid: "Allow administration of the key"
            Effect: "Allow"
            Action:
              - "kms:*"
            Principal:
              AWS: !Ref AWS::AccountId
            Resource: '*'
          -
            Sid: "Allow Encryption Service to use this key"
            Effect: "Allow"
            Action:
              - "kms:Encrypt"
            Principal:
              AWS: !GetAtt LambdaFunctionIAMRole.Arn
            Resource: '*'
          -
            Sid: "Allow Decryption Service to use this key"
            Effect: "Allow"
            Action:
              - "kms:Decrypt"
            Principal:
              AWS: !GetAtt LambdaFunctionIAMRole.Arn
            Resource: '*'

  LambdaFunctionIAMRole:
      Type: "AWS::IAM::Role"
      Properties:
          Path: "/"
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Sid: "AllowLambdaServiceToAssumeRole"
                Effect: "Allow"
                Action:
                  - "sts:AssumeRole"
                Principal:
                  Service:
                    - "lambda.amazonaws.com"
          Policies:
            -
              PolicyName: "InlinePolicy"
              PolicyDocument:
                Version: "2012-10-17"
                Statement:
                  -
                    Effect: "Allow"
                    Action:
                      - "logs:CreateLogGroup"
                      - "logs:CreateLogStream"
                      - "logs:PutLogEvents"
                    Resource: "arn:aws:logs:*:*:*"

  AuthorizerLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SungardAS-Authorization
      Handler: authorizer.lambda_handler
      Runtime: python2.7
      CodeUri: ./src
      Role: !GetAtt LambdaFunctionIAMRole.Arn
      Timeout: 300
      Environment:
        Variables:
          SSO_HOST: !Ref SSOHost
          SSO_BASIC_AUTH_USERNAME: !Ref SSOBasicAuthUsername
          SSO_BASIC_AUTH_PASSWORD: !Ref SSOBasicAuthPassword
          SSO_MASTER_TOKEN: !Ref SSOMasterToken
          KMS_KEY_ID: !Ref EncryptionDecryptionKey
          KMS_KEY_ARN: !GetAtt EncryptionDecryptionKey.Arn

  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionUri: ./swagger.yaml
      StageName: Prod
      Variables:
        AuthenticationLambdaFunctionName: !Ref AuthenticationLambdaFunction

  AuthenticationLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SungardAS-Authentication
      Handler: authenticator.lambda_handler
      Runtime: python2.7
      CodeUri: ./src
      Role: !GetAtt LambdaFunctionIAMRole.Arn
      Timeout: 60
      Environment:
        Variables:
          SSO_HOST: !Ref SSOHost
          SSO_BASIC_AUTH_USERNAME: !Ref SSOBasicAuthUsername
          SSO_BASIC_AUTH_PASSWORD: !Ref SSOBasicAuthPassword
          SSO_MASTER_TOKEN: !Ref SSOMasterToken
          KMS_KEY_ID: !Ref EncryptionDecryptionKey
          KMS_KEY_ARN: !GetAtt EncryptionDecryptionKey.Arn
      Events:
        AuthApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /auth
            Method: POST

Outputs:
  AuthenticationApiUrl:
    Description: URL of Authentication API endpoint
    Value: !Join
      - ''
      - - https://
        - !Ref ApiGatewayApi
        - '.execute-api.'
        - !Ref 'AWS::Region'
        - '.amazonaws.com/Prod'
  AuthorizerLambdaFunctionArn:
    Description: "Authorizer Lambda Function ARN"
    Value: !GetAtt AuthorizerLambdaFunction.Arn
  AuthenticationLambdaFunctionArn:
    Description: "Authentication Lambda Function ARN"
    Value: !GetAtt AuthenticationLambdaFunction.Arn
  KMSKeyId:
    Description: "KMS Key Id"
    Value: !Ref EncryptionDecryptionKey
  KMSKeyArn:
    Description: "KMS Key Id"
    Value: !GetAtt EncryptionDecryptionKey.Arn
